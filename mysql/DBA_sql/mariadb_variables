Variable_name	Value
aria_block_size	8192
aria_checkpoint_interval	30
aria_checkpoint_log_activity	1048576
aria_force_start_after_recovery_failures	0
aria_group_commit	none
aria_group_commit_interval	0
aria_log_file_size	1073741824
aria_log_purge_type	immediate
aria_max_sort_file_size	9223372036853727232
aria_page_checksum	ON
aria_pagecache_age_threshold	300
aria_pagecache_buffer_size	134217728
aria_pagecache_division_limit	100
aria_recover	NORMAL
aria_repair_threads	1
aria_sort_buffer_size	268434432
aria_stats_method	nulls_unequal
aria_sync_log_dir	NEWFILE
aria_used_for_temp_tables	ON
auto_increment_increment	2
auto_increment_offset	2
autocommit	ON
automatic_sp_privileges	ON
back_log	150
basedir	/usr
big_tables	OFF                                # never tune
binlog_annotate_row_events	OFF                # 将原有的语句以注释形式写在binlog文件中
binlog_cache_size	32768                      # session级别参数,缓存binlog内容
binlog_checksum	NONE                               # set it to NONE
binlog_commit_wait_count	0
binlog_commit_wait_usec	100000                     # 并行复制，binlog最多等binlog_commit_wait_usec us，至少等到有binlog_commit_wait_count个commit,来做group commmit
binlog_direct_non_transactional_updates	OFF        # 在一个事务中对非事务表的更改不写到事务缓存，而是直接写到binlog，如果开启的话，小心使用
binlog_format	MIXED
binlog_optimize_thread_scheduling	ON         # for testing ,not change it
binlog_stmt_cache_size	32768                      # 在事务中，非事务的statement会被写到这个cache
bulk_insert_buffer_size	8388608			   # 在导入数据的session中，调大该值，加快数据导入速度(MYISAM,ARIA),每个session会分配
character_set_client	utf8
character_set_connection	utf8
character_set_database	utf8
character_set_filesystem	binary
character_set_results	utf8
character_set_server	utf8
character_set_system	utf8
character_sets_dir	/usr/share/mysql/charsets/
collation_connection	utf8_bin
collation_database	utf8_bin
collation_server	utf8_bin
completion_type	NO_CHAIN		 	   # ??
concurrent_insert	AUTO                       # 允许MYISAM 的select 并同时insert
connect_timeout	10                                 # server 等待连接包的时间
datadir	/var/lib/mysql/8/data/
date_format	%Y-%m-%d
datetime_format	%Y-%m-%d %H:%i:%s
deadlock_search_depth_long	15                 # 只用于aria
deadlock_search_depth_short	4		   # 只用于aria
deadlock_timeout_long	50000000		   # 只用于aria
deadlock_timeout_short	10000			   # 只用于aria
debug_no_thread_alarm	OFF			   # for testing ,no touch
default_regex_flags				   # PCRE和老的正则库兼容性？？
default_storage_engine	InnoDB
default_week_format	0
delay_key_write	ON				   # 只有在关闭表的时候才更新索引（只用于MYISAM表 )
delayed_insert_limit	100                        # 只用于MYISAM表
delayed_insert_timeout	300			   # 只用于MYISAM表
delayed_queue_size	1000			   # 只用于MYISAM表
div_precision_increment	4
event_scheduler	ON                                 # 是否开启event功能
expensive_subquery_limit	100                # 优化器行为选项
expire_logs_days	7
extra_max_connections	1			   # thread pool开启后允许连接extra_port的线程数
extra_port	0
flush	OFF                                        # 通常情况下数据库更改会被记录到OS的缓存，由OS同一flush到磁盘，如果打开，则每个statement后更新都会被直接flush到磁盘
flush_time	0                                  # 表被关闭并flush到磁盘的间隔时间
foreign_key_checks	ON
ft_boolean_syntax	+ -><()~*:""&|             # 全文搜索选项
ft_max_word_len	84				   # 全文搜索选项
ft_min_word_len	4				   # 全文搜索选项
ft_query_expansion_limit	20		   # 全文搜索选项
ft_stopword_file	(built-in)		   # 全文搜索选项
general_log	OFF
general_log_file	hzih171.log
group_concat_max_len	1024			   #  GROUP_CONCAT()限制
gtid_binlog_pos	0-15-81720325
gtid_binlog_state	0-5-20712856,0-8-20712855,0-18-93657,0-38-21640369,0-15-81720325
gtid_current_pos	0-15-81720325
gtid_domain_id	0
gtid_ignore_duplicates	OFF
gtid_slave_pos	0-15-81720325
gtid_strict_mode	OFF
have_compress	YES
have_crypt	YES
have_dynamic_loading	YES
have_geometry	YES
have_openssl	YES
have_profiling	YES
have_query_cache	YES
have_rtree_keys	YES
have_ssl	DISABLED
have_symlink	YES
histogram_size	0				   #  ANALYZE语句是否创建直方图
histogram_type	SINGLE_PREC_HB			   #  host name cache 避免解析
host_cache_size	128
hostname	hzih171
ignore_builtin_innodb	OFF
ignore_db_dirs					   # 使用这个选项可以忽略数据目录中某些非数据库目录
init_connect					   # 在客户端连接数据库前需要执行的操作
init_file					   # 同上
init_slave	
innodb_adaptive_flushing	ON                 # 动态调整 innodb pool中dirty page的刷新速度
innodb_adaptive_flushing_lwm	10                 # 达到10% redo log 容量时启动flush
innodb_adaptive_hash_index	ON
innodb_adaptive_hash_index_partitions	1
innodb_adaptive_max_sleep_delay	150000
innodb_additional_mem_pool_size	8388608
innodb_api_bk_commit_interval	5                  # 用于mysql memcached (mariadb 未实现)
innodb_api_disable_rowlock	OFF		   # 用于mysql memcached (mariadb 未实现)
innodb_api_enable_binlog	OFF		   # 用于mysql memcached (mariadb 未实现)
innodb_api_enable_mdl	OFF			   # 用于mysql memcached (mariadb 未实现)
innodb_api_trx_level	0			   # 用于mysql memcached (mariadb 未实现)
innodb_autoextend_increment	64
innodb_autoinc_lock_mode	1                  # 1表示使用consecutive lock mode，bulk INSERTs时会使用表级锁，当单个insert 语句时不使用表级锁，而是使用轻量级的mutex
innodb_buffer_pool_dump_at_shutdown	OFF        # 当mysql关闭时记录pool中的page，在启动时加载对应page，缩短wormup过程
innodb_buffer_pool_dump_now	OFF                # 是否马上记录pool中的page
innodb_buffer_pool_filename	ib_buffer_pool     # 当pool中page被dump时，会记录到这个文件
innodb_buffer_pool_instances	8		   # 将pool分块，减少锁竞争，如果pool是8G，8个instance ,每个分配1G pool内存
innodb_buffer_pool_load_abort	OFF	           # 是否放弃innodb_buffer_pool_load_at_startup或者innodb_buffer_pool_load_now，加载进pool的page
innodb_buffer_pool_load_at_startup	OFF	   # 当mysql启动时加载记录在文件中的page，快速wormup pool
innodb_buffer_pool_load_now	OFF                # 是否马上加载记录在文件的page
innodb_buffer_pool_populate	OFF		   # 开启时XtraDB会在pool上预分配page，使得NUMA allocation decisions are made ？？
innodb_buffer_pool_size	8589934592
innodb_change_buffer_max_size	25                 # change buffer占pool大小的百分比
innodb_change_buffering	all			   # change buffer的记录模式
innodb_checksum_algorithm	innodb
innodb_checksums	ON
innodb_cleaner_lsn_age_factor	high_checkpoint	   # 用于XtraDB 改善激进的InnoDB adaptive flushing 
innodb_cmp_per_index_enabled	OFF
innodb_commit_concurrency	0		   # 限制同时提交事务的线程数目
innodb_compression_failure_threshold_pct	5  # 在compression操作失败的次数超过总的compression操作百分比后启动page padding (对page做padding 可以让page数据稀疏，提高压缩的成功率)
innodb_compression_level	6                  # 选择INNODB PAGE压缩级别
innodb_compression_pad_pct_max	50		   # 一个page中可以被padding的最大百分比数值，如果是16K page则最大可以padding到16K*75%
innodb_concurrency_tickets	5000               # 被innodb接受的线程可以运行的时间片大小
innodb_corrupt_table_action	assert             # 当Xtradb检测到单个表空间有污染数据时会去crash数据库，设置为warn时会禁止污染表相关的IO，设置为salvage则允许读数据（污染的page略过） innodb_file_per_table选项必须开启
innodb_data_file_path	ibdata1:12M:autoextend
innodb_data_home_dir	
innodb_disable_sort_file_cache	OFF                # 如果开启则禁止OS 文件系统cache用作merge-sort temporary files
innodb_doublewrite	ON
innodb_empty_free_list_algorithm	backoff    # XtraDB选项，使用新算法(backoff)当pool free list为空的时候用来减少mutex竞争
innodb_fake_changes	OFF                        # 在复制环境中slave启动关闭会导致从上游过来的执行语句变慢，而开启这个选项将使用额外的线程来进行wormup
innodb_fast_shutdown	1                          # 在关闭时不执行full purge or an insert buffer merge,在需要进行版本升级时需要将关闭模式设为0，在紧急情况下设置为2
innodb_file_format	Antelope
innodb_file_format_check	ON                 # 当page格式版本不支持则不启动innodb/xtradb
innodb_file_format_max	Antelope
innodb_file_per_table	ON
innodb_flush_log_at_timeout	1		   # 写并flush log的间隔秒数，为了不影响binary log的group commit性能，可以增加这个值
innodb_flush_log_at_trx_commit	1
innodb_flush_method	
innodb_flush_neighbors	1			   # SSD应禁用这个选项（0）因为顺序IO没有任何收益，设置为1表示同时flush一个extent中连续的dirty page，设置为2表示刷同一个extent的dirty page
innodb_flushing_avg_loops	30                 # 对于workload改变adaptive flushing改变的速度The value is the number of iterations that a previously calculated flushing state snapshot is kept
innodb_force_load_corrupted	OFF		   # 设置开启时则允许innodb/XtraDB加载标记为污染的表，在恢复时用
innodb_force_recovery	0
innodb_foreground_preflush	exponential_backoff
innodb_ft_aux_table				   # 全文索引选项
innodb_ft_cache_size	8000000			   # 全文索引选项
innodb_ft_enable_diag_print	OFF		   # 全文索引选项
innodb_ft_enable_stopword	ON		   # 全文索引选项
innodb_ft_max_token_size	84		   # 全文索引选项
innodb_ft_min_token_size	3		   # 全文索引选项
innodb_ft_num_word_optimize	2000		   # 全文索引选项
innodb_ft_result_cache_limit	2000000000	   # 全文索引选项
innodb_ft_server_stopword_table			   # 全文索引选项
innodb_ft_sort_pll_degree	2		   # 全文索引选项
innodb_ft_total_cache_size	640000000	   # 全文索引选项
innodb_ft_user_stopword_table			   # 全文索引选项
innodb_io_capacity	200                        # 对于后台进程发送IO的限制
innodb_io_capacity_max	2000
innodb_kill_idle_transaction	0
innodb_large_prefix	OFF
innodb_lock_wait_timeout	50
innodb_locking_fake_changes	ON
innodb_locks_unsafe_for_binlog	OFF
innodb_log_arch_dir	/var/lib/mysql/8/innolog
innodb_log_arch_expire_sec	0
innodb_log_archive	OFF
innodb_log_block_size	512 			   # 事物日志记录长度，使用SSD卡,或者innodb_flush_method 在ext4文件系统上设置为ALL_O_DIRECT需要设置为4096，
innodb_log_buffer_size	8388608
innodb_log_checksum_algorithm	innodb
innodb_log_compressed_pages	ON             # 如果要使用不同版本的zlib来恢复数据库需要关闭这个选项
innodb_log_file_size	50331648
innodb_log_files_in_group	2
innodb_log_group_home_dir	/var/lib/mysql/8/innolog
innodb_lru_scan_depth	1024
innodb_max_bitmap_file_size	104857600
innodb_max_changed_pages	1000000
innodb_max_dirty_pages_pct	75		   # pool中可以存在的最大dirty page比例
innodb_max_dirty_pages_pct_lwm	0		   # 到达这个低水线时开始preflush，以降低dirty page比例，设置为0禁止preflush
innodb_max_purge_lag	0
innodb_max_purge_lag_delay	0
innodb_mirrored_log_groups	1                  # 未实现的参数
innodb_monitor_disable	
innodb_monitor_enable	
innodb_monitor_reset	
innodb_monitor_reset_all	
innodb_old_blocks_pct	37                	   # pool中用于old block list的百分比
innodb_old_blocks_time	1000			   # 在page从old block list移到new block list之前需要在old block list中待的ms ,在做偶尔的table scan的时候可以调大这个值
在show engine innodb status输出中 Old database pages表示在old block list中的page数目，Pages made young,not young 表示从old list移动到new list的page数目，以及留在old list的page数目,youngs/s non-youngs/s表示每秒对old list page的访问数目导致移动或者停留在old list的统计, young-making rate,not 表示移动到new list的page比例,和留在old list的比例，youngs/s较低表示或者需要降低delay time，或者增加容纳old list的内存比例，如果non-youngs/s很大，当在做scan table时（youngs/s也很大），需要调大delay time
innodb_online_alter_log_max_size	134217728
innodb_open_files	1000
innodb_optimize_fulltext_only	OFF		   # 当使用optimaze table时是否影响到全文索引，动态，在维护全文索引时开启
innodb_page_size	16384                      # page 大小
innodb_print_all_deadlocks	OFF		   # 当开启时，所有deadlock信息都被写到error log中
innodb_purge_batch_size	300
innodb_purge_threads	1			   # 如果设置为0，则由master thread做purge操作，如果设置为1，单独由purge thread做purge操作，以减少锁竞争
innodb_random_read_ahead	OFF		   # 随机预读模式是否打开(??)
innodb_read_ahead_threshold	56		   # 在读入一个64大小的extent中的多少page之后，innodb会启动异步读操作读取接下来的下一个extent（线性预读)
innodb_read_io_threads	4			   # read thread数目
innodb_read_only	OFF			   # 如果打开选项则innodb表是只读的
innodb_replication_delay	0		   # innodb_thread_concurrency占满时，slave的replication线程延时的时间ms
innodb_rollback_on_timeout	OFF		   # 通常当timeout时innodb会rollback事务的最后一个statement，打开这个选项后会导致rollback整个事务
innodb_rollback_segments	128  		   # 在一个事务中使用rollback segment的数目
innodb_sched_priority_cleaner	19
innodb_show_locks_held	10			   # 在show engine innodb status中每个事务显示锁的最大个数
innodb_show_verbose_locks	0		   # 显示事务锁的详细信息
innodb_sort_buffer_size	1048576
innodb_spin_wait_delay	6
innodb_stats_auto_recalc	ON
innodb_stats_method	nulls_equal
innodb_stats_on_metadata	OFF
innodb_stats_persistent	ON
innodb_stats_persistent_sample_pages	20
innodb_stats_sample_pages	8
innodb_stats_transient_sample_pages	8
innodb_status_output	OFF
innodb_status_output_locks	OFF
innodb_strict_mode	OFF			   # return error instead warning in certain case
innodb_support_xa	ON
innodb_sync_array_size	1
innodb_sync_spin_loops	30			   # thread在被挂起前等待innodb mutex允许进行的自选锁循环次数
innodb_table_locks	ON
innodb_thread_concurrency	0                  # 允许运行的并发线程数目（不包括等待锁的线程）当到达这个数目后，后来的线程将会进入FIFO队列(建议为CPU CORE2倍加上磁盘数目)
innodb_thread_sleep_delay	10000
innodb_track_changed_pages	OFF
innodb_undo_directory	.			   # 制定undo表空间位置
innodb_undo_logs	128			   # 设置rollback segment的数目，默认为最大值128，需要依靠状态参数Innodb_available_undo_logs来调整,新版本用来取代innodb_rollback_segments
innodb_undo_tablespaces	0			   # 设置单独的undo表空间，必须在数据库初始化之前执行
innodb_use_atomic_writes	OFF		   # 为了防止partial writes，innodb使用double write，但这种机制不是很好，为了降低延时，在FusionIO的directFS filesystem上支持atomic (all or nothing) write ,如果在SSD设备上可以关闭double write打开这个选项，打开这个选项导致innodb_flush_method 如果不是O_DIRECT, ALL_O_DIRECT, or O_DIRECT_NO_FSYNC，则会被设置为O_DIRECT ，innodb_use_fallocate被打开（文件以posix_fallocate方式扩展，而不是在文件末尾写0），如果系统表空间不在支持atomic write设备上，innnodb不会启动，innodb_doublewrite会被强制关闭,对于非表空间文件则返回错误到日志
innodb_use_fallocate	OFF			   # 使用OS的功能在POSIX systems上使用posix_fallocate系统调用，更有效分配空间
innodb_use_global_flush_log_at_trx_commit	ON
innodb_use_native_aio	ON
innodb_use_stacktrace	OFF
innodb_use_sys_malloc	ON			   # 使用操作系统的内存分配机制(??)
innodb_version	5.6.17-65.0			   # innodb版本，在mysql5.1.38版本后和mysql版本一致
innodb_write_io_threads	4			   # innodb/XtraDB 写的IO thread数目
interactive_timeout	28800
join_buffer_size	2097152			   # 不使用索引的full join会用到，这个规定的是最小值，Mariadb默认为128K，对大多数用户足够
join_buffer_space_limit	2097152			   # query buffer中的最大值(??)
join_cache_level	2
keep_files_on_create	ON			   # 使用于MYISAM表
key_buffer_size	134217728
key_cache_age_threshold	300
key_cache_block_size	1024
key_cache_division_limit	100
key_cache_segments	0
large_files_support	ON			   # linux系统可以支持HUGE page，有的应用可以通过增加page大小来减小TLB miss率，查看系统是否开启HUGE page支持可以通过检查命令 cat /proc/meminfo | grep -i huge是否有内容输出,具体查看内核文档Documentation/vm/hugetlbpage.txt,这个选项检测系统是否支持该功能
large_page_size	0				   # 开始large_pages情况下，指定分配内存PAGE的大小
large_pages	OFF				   # large page support是否使用
lc_messages	en_US
lc_messages_dir	
lc_time_names	en_US
license	GPL
local_infile	ON				   # 如果开启 LOAD DATA INFILE 语句支持LOCAL，否则由于安全原因LOAD DATA LOCAL会报错
lock_wait_timeout	31536000		   # 企图取得metadata lock而等待的最长时间 默认值 1年 :(
locked_in_memory	OFF			   # 是否--memlock用来将mysqld锁在内存中 (??)
log_bin	ON					   # 是否开启binary log
log_bin_trust_function_creators	OFF		   # CREATE FUNCTION中如果没有DETERMINISTIC, NO SQL or READS SQL DATA被指定则不能创建成功，因为结果在slave上会不同，如果打开这个选项，则可以创建，并且允许没有SUPER权限的用户create stored routine and stored functions
log_error	/var/lib/mysql/8/sm_8db.err	   # 错误日志位置
log_output	FILE				   # log内容输出到表还是文件
log_queries_not_using_indexes	OFF		   
log_slave_updates	ON
log_slow_filter	admin,filesort,filesort_on_disk,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk    # slow log会记录那些语句
log_slow_rate_limit	1			   # 如果slow log产生速度比较快，为了减少对于IO的影响，可以设置log_slow_rate_limit，如果设置为20则是每20条记录一次日志（？？）
log_slow_verbosity				   # 记录slow log的详细情况，query_plan记录慢查询执行计划信息，innodb 记录XtraDB/innodb统计信息，explain打印explain信息
log_warnings	1				   # 告警日志记录等级，详细看https://mariadb.com/kb/en/mariadb/documentation/optimization-and-tuning/system-variables/server-system-variables/#log_warnings
long_query_time	10.000000			   # 超过这个时间的query会被认为是slow query
low_priority_updates	OFF			   # 如果打开这个选项，对于仅支持表级锁的引擎（Aria, MyISAM, MEMORY and MERGE）所有INSERT,DELETE,UPDATE,LOCK TABLE WRITE将会等待直到对应的目标表上没有SELECT,LOCK TABLE READ在执行为止,sql_low_priority_updates是这个选项同义词
lower_case_file_system	OFF			   # 关闭则文件名是case-sensitive
lower_case_table_names	1			   # 如果设置为1 table name,alias ,database name会以 case-nosensitive方式比较(unix系统下应该设置为0)
master_verify_checksum	OFF
max_allowed_packet	16777216
max_binlog_cache_size	18446744073709547520
max_binlog_size	1073741824
max_binlog_stmt_cache_size	18446744073709547520
max_connect_errors	1000			   # 在host连续发生max_connect_errors个错误链接后禁止host再连数据库，如果有链接成功该参数会被置0,可以使用FLUSH HOSTS来unblock
max_connections	1000				   # 最大允许客户端同时链接服务器数目
max_delayed_threads	20			   # 限制INSERT DELAYED 线程数目，当超过这个值后其他的INSERT DELAYED会被当作普通的INSERT，设置为0则DELAYED完全被忽略
max_error_count	64				   # show errors和show warnings能显示的消息最大条数
max_heap_table_size	524288000
max_insert_delayed_threads	20		   # max_delayed_threads的同义词
max_join_size	18446744073709551615
max_length_for_sort_data	1024
max_long_data_size	16777216		   # 默认和max_allowed_packet一样
max_prepared_stmt_count	16382			   # 服务器上最大的prepare statment数目
max_relay_log_size	1073741824
max_seeks_for_key	4294967295
max_sort_length	1024				   # 排序操作使用的前max_sort_length个字符，如果超过这个则后面的字符在排序中被忽略
max_sp_recursion_depth	0			   # 允许stored procedure递归调用的层数，增加这个值相应需要增加 thread_stack,stored functions不适用
max_tmp_tables	32
max_user_connections	0			   # 一个用户帐号最大的并发连接数目，0表示没有限制，-1禁止用户连接服务器，但是有SUPER权限的用户不受限制
max_write_lock_count	4294967295		   # 在处理完max_write_lock_count个写锁后接下来的读请求会被优先处理（？？）
metadata_locks_cache_size	1024
metadata_locks_hash_instances	8                  # set of metadata_locks 会被分成8组到不同的hash以减少竞争
min_examined_row_limit	0			   # 如果一个查询检查超过min_examined_row_limit数量的记录，则会被记录到slow log,0表示无限制
mrr_buffer_size	262144				   # 设置用来在扫描secondary index后将带回的主键值缓存，缓存区域的大小
multi_range_count	256                        # 该参数停止使用，改用mrr_buffer_size参数
myisam_block_size	1024			   # 用于MYISAM index page的block大小
myisam_data_pointer_size	6
myisam_max_sort_file_size	9223372036853727232
myisam_mmap_size	18446744073709551615
myisam_recover_options	DEFAULT
myisam_repair_threads	1
myisam_sort_buffer_size	134216704
myisam_stats_method	nulls_unequal
myisam_use_mmap	OFF
net_buffer_length	8192
net_read_timeout	30
net_retry_count	10
net_write_timeout	60
old	OFF
old_alter_table	OFF
old_mode					   # 用来模拟老版本的行为用来替代old选项
old_passwords	OFF				   # 开启的话使用mysql4.1的密码形式
open_files_limit	65535
optimizer_prune_level	1
optimizer_search_depth	62
optimizer_selectivity_sampling_limit	100
optimizer_switch	index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=off,table_elimination=on,extended_keys=on,exists_to_in=on                # 对查询优化器控制优化选项的开关
optimizer_use_condition_selectivity	1
performance_schema	OFF
performance_schema_accounts_size	-1
performance_schema_digests_size	-1
performance_schema_events_stages_history_long_size	-1
performance_schema_events_stages_history_size	-1
performance_schema_events_statements_history_long_size	-1
performance_schema_events_statements_history_size	-1
performance_schema_events_waits_history_long_size	-1
performance_schema_events_waits_history_size	-1
performance_schema_hosts_size	-1
performance_schema_max_cond_classes	80
performance_schema_max_cond_instances	-1
performance_schema_max_file_classes	50
performance_schema_max_file_handles	32768
performance_schema_max_file_instances	-1
performance_schema_max_mutex_classes	200
performance_schema_max_mutex_instances	-1
performance_schema_max_rwlock_classes	40
performance_schema_max_rwlock_instances	-1
performance_schema_max_socket_classes	10
performance_schema_max_socket_instances	-1
performance_schema_max_stage_classes	150
performance_schema_max_statement_classes	180
performance_schema_max_table_handles	-1
performance_schema_max_table_instances	-1
performance_schema_max_thread_classes	50
performance_schema_max_thread_instances	-1
performance_schema_session_connect_attrs_size	-1
performance_schema_setup_actors_size	100
performance_schema_setup_objects_size	100
performance_schema_users_size	-1
pid_file	/var/lib/mysql/8/sm_8db.pid
plugin_dir	/usr/lib64/mysql/plugin/
plugin_maturity	unknown
port	3372
preload_buffer_size	32768
profiling	OFF
profiling_history_size	15
progress_report_time	5
protocol_version	10
query_alloc_block_size	8192			    # 在查询运行和parse时额外block分配的大小
query_cache_limit	1048576			    # 超过这个值的结果不会被cache到query cache
query_cache_min_res_unit	4096		    # 规定每次query cache分配至少需要分多少大小
query_cache_size	0			    # 0禁止query cache,这时同时需要设置query_cache_type 为关闭
query_cache_strip_comments	OFF		    # 设置为1时，server在比较查询的时候会将查询的comment去掉再计算hash值来比较
query_cache_type	ON			    # 设置为0时，禁止query cache 设置为1时，只有SELECT SQL_NO_CACHE结果不被保存,设置为2时只有SELECT SQL_CACHE会被保存，
query_cache_wlock_invalidate	OFF		    # 设置为0时，即使在对应的表上有write lock时，query cache也会将结果返回，设置为1时,客户端必须等待write lock被释放后才会收到结果
query_prealloc_size	8192                         # session 级别buffer,运行复杂查询可以增加这个值，来减小在查询操作时更多内存分配的请求
range_alloc_block_size	4096
read_buffer_size	262144
read_only	OFF
read_rnd_buffer_size	524288
relay_log	/var/lib/mysql/8/relaylog/sm_8db-relay-bin
relay_log_index	
relay_log_info_file	relay-log.info
relay_log_purge	ON
relay_log_recovery	OFF
relay_log_space_limit	0
replicate_annotate_row_events	OFF
replicate_do_db	
replicate_do_table	
replicate_events_marked_for_skip	replicate
replicate_ignore_db	
replicate_ignore_table	
replicate_wild_do_table	
replicate_wild_ignore_table	
report_host	
report_password	
report_port	3372
report_user	
rowid_merge_buff_size	8388608
rpl_recovery_rank	0
secure_auth	OFF
secure_file_priv	
server_id	38
skip_external_locking	ON
skip_name_resolve	ON
skip_networking	OFF
skip_show_database	OFF
slave_compressed_protocol	OFF
slave_ddl_exec_mode	IDEMPOTENT
slave_domain_parallel_threads	0
slave_exec_mode	STRICT
slave_load_tmpdir	/tmp
slave_max_allowed_packet	1073741824
slave_net_timeout	3600
slave_parallel_max_queued	131072
slave_parallel_threads	0
slave_skip_errors	OFF
slave_sql_verify_checksum	ON
slave_transaction_retries	10
slave_type_conversions	
slow_launch_time	2
slow_query_log	OFF			   # 是否开启慢查询
slow_query_log_file	/var/lib/mysql/8/sm_8db-slow.log   # slow log的名字
socket	/tmp/mysql8.sock		   		   # 本地client通过socket链接 ，socket文件
sort_buffer_size	2097152
sql_auto_is_null	OFF
sql_big_selects	ON
sql_buffer_result	OFF
sql_log_bin	ON
sql_log_off	OFF
sql_mode	PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
sql_notes	ON
sql_quote_show_create	ON
sql_safe_updates	OFF
sql_select_limit	18446744073709551615
sql_slave_skip_counter	0
sql_warnings	OFF
ssl_ca	
ssl_capath	
ssl_cert	
ssl_cipher	
ssl_crl	
ssl_crlpath	
ssl_key	
storage_engine	InnoDB
stored_program_cache	256			   # 在binlog记录了sync_binlog个EVENT后将内容刷到磁盘，默认设置1，导致吞吐量降低，设置0则由文件系统来处理刷盘问题
sync_binlog	1
sync_frm	ON				   # 开启的话，每个非临时表创建，frm会被刷到磁盘上
sync_master_info	0			   # 在sync_master_info个event之后replication slave将master.info信息刷到磁盘，设置0则由文件系统来处理刷盘问题
sync_relay_log	0				   # 在sync_relay_log个event写到relay log上后replication slave将relay_log信息刷到磁盘，设置0则由文件系统来处理刷盘问题
sync_relay_log_info	0			   # 在sync_relay_log_info个事务之后replication slave将relay.info信息刷到磁盘，设置0则由文件系统来处理刷盘问题
system_time_zone	CST
table_definition_cache	400			   # .frm文件的缓存(表定义)
table_open_cache	1000			   # 所有线程可以打开表的总数，增加这个值需要增加系统的open file limit
thread_cache_size	200			   # 如果thread pool功能被激活，这个会被忽略，thread被重用的数字
thread_concurrency	10			   # 这个参数被废弃
thread_handling	one-thread-per-connection	   # 当thread pool plugin被加载的时候显示为dynamically-loaded(如何加载??)pool-of-threads表示使用thread pool,no-threads 在debug时使用,表示用单线程处理所有链接 http://www.tuicool.com/articles/bAvMVrr
thread_pool_idle_timeout	60    		   # 空闲的worker thread退出前等待时间
thread_pool_max_threads	500			   # thread_pool最大线程数目(所有group能够创建的thread总数目),如果达到这个限制不会有新的线程创建
thread_pool_oversubscribe	3		   # 内部参数not touch,每个group可以活跃的线程数目
thread_pool_size	24			   # 线程pool的group个数，默认为系统cpu core数目,所有链接客户端分成group,
thread_pool_stall_limit	500			   # 在超过这个时间后(ms),group将会创建新的thread,来运行其他statement,值比较小可以避免死锁，值较大可以避免创建过多的thread
thread_stack	294912				   # 每个线程的stack大小，如果值太小会影响存储过程的递归call深度，以及复杂查询的处理能力
time_format	%H:%i:%s
time_zone	SYSTEM
timed_mutexes	OFF
tmp_table_size	524288000
tmpdir	/tmp
transaction_alloc_block_size	8192		   # 当transaction_prealloc_size不足容纳的时候，每次分配的值由transaction_alloc_block_size控制
transaction_prealloc_size	4096		   # 每个事务会被分配一个memory pool,这个值规定初始分配大小
tx_isolation	REPEATABLE-READ			   # 设置事务读写隔离级别SET TRANSACTION语句也可设置
tx_read_only	OFF				   # 是否设置事务只读SET TRANSACTION语句也可设置
unique_checks	ON				   # 在导入大批量数据时可以开启，但如果有重复数据还是会报错
updatable_views_with_limit	YES
use_stat_tables	NEVER				   # mariadb提供引擎无关的统计信息表mysql.table_stats,mysql.index_stats,mysql.column_stats,这些信息可以提供给优化器使用,设置为NEVER则禁止优化器使用这些信息，设置为complementary，如果对应的存储引擎没有提供相关信息的话，优化器会使用这些表信息，设置为preferably，则优先从这些表中获取统计信息,当设置为NEVER，persistent for 语句不是analyze table语句的一部分，只有引擎相关的统计信息会被收集，,注意收集的时候全表扫描，有性能损耗，analyze table dsp_stat_hourly persistent for all;另外通过在slave中运行分析语句，将统计结果导入到master是比较好的方法https://mariadb.com/kb/en/mariadb/documentation/optimization-and-tuning/query-optimizations/statistics-for-optimizing-queries/engine-independent-table-statistics/
userstat	OFF				   # 开启user statistics功能后，flush index_statistics;flush user_statistics;flush client_statistics;flush table_statistics;会生效,对应的show也一样,同时information_schema中会多对应的表https://mariadb.com/kb/en/mariadb/documentation/optimization-and-tuning/query-optimizations/statistics-for-optimizing-queries/user-statistics/
version	10.0.12-MariaDB-log
version_comment	MariaDB Server
version_compile_machine	x86_64
version_compile_os	Linux
version_malloc_library	bundled jemalloc
wait_timeout	28800

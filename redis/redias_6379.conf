## GENERAL ##
daemonize			 yes
pidfile				 /var/run/redis.pid
port				 6379
tcp-backlog 			 512    # make sure modify /proc/sys/net/core/somaxconn and tcp_max_syn_backlog at same time
					# net.ipv4.tcp_max_syn_backlog = 200000  and net.ipv4.tcp_synack_retries = 0  (Defend SYN flooding)
					# net.core.somaxconn = 2048
bind 				192.168.1.100 10.0.0.1		# bind multiple interfaces
unixsocket 			/tmp/redis.sock # default redis do not bind on UNIX stocket
unixsocketperm 		        700
timeout 			0               # after N seconds disconnect idle client(0 disable timeout)
tcp-keepalive 			0		# do not use SO_KEEPALIVE to detect network connection
loglevel 			notice
logfile 			/var/log/redis/redis_6379.log
dbfilename 			dump.rdb
dir 				/data/redis/db	# create rdb file in this directory

syslog-enabled 			no		# write log info to syslog if need
syslog-ident 			redis		# info identity in syslog
syslog-facility 		local0		# which log syslog will send redis info ,notice syslog config file now in /etc/rsyslog.conf
databases 			16		# default database in redis is 0 ,use SELECT <DBID> to switch

save 900 1					# save point
save 300 10
save 60 10000
stop-writes-on-bgsave-error 	yes		# stop any writes if backgroud save process error
rdbcompression 			yes		# set to yes if you have compressible keys or values
rdbchecksum 			yes		# disable it for max performance ,but less security for data

## REPLICATION ##
slaveof <masterip> <masterport>			# as a slave instance
masterauth <master-password>			# auth slave connection on master
slave-serve-stale-data 		yes		# if slave return error or allow client read the stale data		
slave-read-only 		yes		# read only slave instance
repl-diskless-sync		no		# set yes for large bandwidth and slow disk,but the new arrive slave need to be queued
repl-diskless-sync-delay 	5		# bus (sync process) will wait ,so more people(new slave) caming can take it
repl-ping-slave-period 		10		# the next time which slave ping master
repl-timeout 			60		# should be large then repl-ping-slave-period
repl-disable-tcp-nodelay 	no		# consume more bandwidth but less response
repl-backlog-size 		1mb		# backlog is buffer accumulate slave date when slave disconnect (on master??,one slave one buffer??)
repl-backlog-ttl 		3600		# free backlog after repl-backlog-ttl pass,and no slave connect
slave-priority 			100		# the slave has min slave-priority will be choosed,0 disable slave 
